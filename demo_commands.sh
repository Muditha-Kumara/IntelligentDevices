#!/bin/bash

# Vehicle Driving Quality Monitor - Demo Script
# =============================================
# This script provides example MQTT commands for testing the system

DEVICE_ID="opla-01"
MQTT_BROKER="broker.hivemq.com"

echo "ðŸš— Vehicle Driving Quality Monitor - Demo Commands"
echo "================================================="
echo ""
echo "Prerequisites:"
echo "- Install mosquitto-clients: sudo apt install mosquitto-clients"
echo "- Or use any MQTT client tool"
echo ""
echo "1. Subscribe to telemetry data:"
echo "   mosquitto_sub -h $MQTT_BROKER -t \"devices/$DEVICE_ID/telemetry\""
echo ""
echo "2. Subscribe to driving events:"
echo "   mosquitto_sub -h $MQTT_BROKER -t \"devices/$DEVICE_ID/events\""
echo ""
echo "3. Subscribe to all device topics:"
echo "   mosquitto_sub -h $MQTT_BROKER -t \"devices/$DEVICE_ID/+\""
echo ""
echo "4. Send configuration update (example - adjust thresholds):"
echo "   mosquitto_pub -h $MQTT_BROKER -t \"devices/$DEVICE_ID/config\" -m '{"
echo "     \"thresholds\": {"
echo "       \"alert_accel\": 2.5,"
echo "       \"critical_accel\": 4.0,"
echo "       \"hard_braking\": 3.0,"
echo "       \"sharp_turn\": 120.0,"
echo "       \"sampling_rate\": 200,"
echo "       \"telemetry_interval\": 5000"
echo "     }"
echo "   }'"
echo ""
echo "5. Send high sensitivity configuration (for testing):"
echo "   mosquitto_pub -h $MQTT_BROKER -t \"devices/$DEVICE_ID/config\" -m '{"
echo "     \"thresholds\": {"
echo "       \"alert_accel\": 1.5,"
echo "       \"critical_accel\": 2.5,"
echo "       \"hard_braking\": 2.0,"
echo "       \"sharp_turn\": 90.0,"
echo "       \"sampling_rate\": 100,"
echo "       \"telemetry_interval\": 2000"
echo "     }"
echo "   }'"
echo ""
echo "Expected Message Formats:"
echo "========================="
echo ""
echo "Telemetry message example:"
echo "{"
echo "  \"device_id\": \"$DEVICE_ID\","
echo "  \"timestamp\": 123456789,"
echo "  \"values\": {"
echo "    \"accel_x\": 0.12,"
echo "    \"accel_y\": -0.05,"
echo "    \"accel_z\": 9.81,"
echo "    \"gyro_x\": 0.01,"
echo "    \"gyro_y\": -0.02,"
echo "    \"gyro_z\": 0.00,"
echo "    \"temperature\": 25.3,"
echo "    \"humidity\": 45.2,"
echo "    \"pressure\": 101.3,"
echo "    \"light_level\": 150,"
echo "    \"mic_level\": 0.25"
echo "  }"
echo "}"
echo ""
echo "Event message example:"
echo "{"
echo "  \"device_id\": \"$DEVICE_ID\","
echo "  \"timestamp\": 123456789,"
echo "  \"type\": \"hard_braking\","
echo "  \"level\": \"alert\","
echo "  \"description\": \"Hard braking detected\","
echo "  \"values\": {"
echo "    \"accel_x\": -4.2,"
echo "    \"accel_y\": 0.1,"
echo "    \"accel_z\": 9.5,"
echo "    \"gyro_z\": 0.05,"
echo "    \"mic_level\": 0.75"
echo "  }"
echo "}"
echo ""
echo "ðŸ“± Quick Test with Python client:"
echo "   python3 mqtt_test_client.py"
echo ""
echo "ðŸŽ¯ To test the system:"
echo "   1. Upload the Arduino code to your MKR IoT Carrier"
echo "   2. Update WiFi credentials in the code"
echo "   3. Run the Python client or use mosquitto commands above"
echo "   4. Simulate driving events by moving the device"
echo ""
